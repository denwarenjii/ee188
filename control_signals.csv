Instruction Mnemonic,Arguments,Function,Operation,Format Name,Format,Program Memory Addresing Mode,SH2PMAU : in RegIn,SH2PMAU : in PRIn,SH2PMAU : in PRWriteEN,SH2PMAU : in Off8,SH2PMAU : in Off12,SH2PMAU : in PCAddrMode,SH2PMAU : out PCOut,SH2PMAU : out PROut,Data Memory Addressing Mode,SH2DMAU : in RegSrc,SH2DMAU : in R0Src,SH2DMAU : in PCSrc,SH2DMAU : in GBRIn,SH2DMAU : in GBRWriteEN,SH2DMAU : in Off4,SH2DMAU : in Off8,SH2DMAU : in BaseSel,SH2DMAU : in IndexSel,SH2DMAU : in OffScalarSel,SH2DMAU : in IncDecSel,SH2DMAU : out Address,SH2DMAU : out AddrSrcOut,SH2DMAU : out GBROut,"Memory Access Type (Read, Write)",Data Size,"Data Extension (Zero, Sign, None)",Execution Clocks,Implemented?
MOV,"#imm, Rn",Sign extend immediate and move into Rn.,imm -> Sign extension -> Rn,ni,1110 nnnn iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,X,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
MOV.W,"@(disp, PC), Rn","Read word from @(disp:8 * 2 + PC), sign extend, and move into Rn.",(disp x 2 + PC) -> Sign extension -> Rn,nd,1011 nnnn dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,PC relative adressing with displacement (Word),X,X,SH2PMAU : out PCOut,X,0,X,dddd dddd,BaseSel_PC,IndexSel_OFF8,OffScalarSel_TWO,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Word,Sign,,Yes
MOV.L,"@(disp, PC), Rn",Read long-word from @(disp:8 * 2 + PC) and move into Rn.,(disp x 4 + PC) -> Rn,nd,1101 nnnn dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,PC relative addressing with displacement (Long-word),X,X,SH2PMAU : out PCOut,X,0,X,dddd dddd,BaseSel_PC,IndexSel_OFF8,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOV,"Rm, Rn",Move Rm into Rn.,Rm -> Rn,nm,0110 nnnn mmmm 0011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
MOV.B,"Rm, @Rn",Move byte of Rm into @(Rn).,Rm -> (Rn),nm,0010 nnnn mmmm 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rn (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Byte,None,,Yes
MOV.W,"Rm, @Rn",Move word of Rm into @(Rn).,Rm -> (Rn),nm,0010 nnnn mmmm 0001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rn (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Word,None,,Yes
MOV.L,"Rm, @Rn",Move long-word of Rm into @(Rn).,Rm -> (Rn),nm,0010 nnnn mmmm 0010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rn (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Long-word,None,,Yes
MOV.B,"@Rm, Rn","Read byte from @(Rm), sign extend, and move into Rn.",(Rm) -> Sign extension -> Rn,nm,0110 nnnn mmmm 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Byte,Sign,,Yes
MOV.W,"@Rm, Rn","Read word from @(Rm), sign extend, and move into Rn.",(Rm) -> Sign extension -> Rn,nm,0110 nnnn mmmm 0001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Word,Sign,,Yes
MOV.L,"@Rm, Rn",Read long-word from @(Rm) and move into Rn.,(Rm) -> Rn,nm,0110 nnnn mmmm 0010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOV.B,"Rm, @-Rn",Decrement Rn then move byte from Rm into @(Rn).,"Rn-1 -> Rn, Rm -> (Rn)",nm,0010 nnnn mmmm 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Pre-decrement indirect register addressing (Byte),Rn (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_PRE_DEC,SH2CPU : in AB,to register array,X,Write,Byte,None,,Yes
MOV.W,"Rm, @-Rn",Decrement Rn then move word from Rm into @(Rn).,"Rn-2 -> Rn, Rm -> (Rn)",nm,0010 nnnn mmmm 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Pre-decrement indirect register addressing (Word),Rn (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_TWO,IncDecSel_PRE_DEC,SH2CPU : in AB,to register array,X,Write,Word,None,,Yes
MOV.L,"Rm, @-Rn",Decrement Rn then move long-word from Rm into @(Rn).,"Rn-4 -> Rn, Rm -> (Rn)",nm,0010 nnnn mmmm 0110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Long-word),Rn (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Long-word,None,,Yes
MOV.B,"@Rm+, Rn","Read byte from @(Rm), sign extend, and move into Rn. Then, increment Rm.","(Rm) -> Sign extension -> Rn, Rm+1 -> Rm",nm,0110 nnnn mmmm 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Post-increment indirect register addressing (Byte),Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_FOUR,IncDecSel_POST_INC,SH2CPU : in AB,to register array,X,Read,Byte,Sign,,Yes
MOV.W,"@Rm+, Rn","Read word from @(Rm), sign extend, and move into Rn. Then, increment Rm.","(Rm) -> Sign extension -> Rn, Rm+2 -> Rm",nm,0110 nnnn mmmm 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Post-increment indirect register addressing (Word),Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_FOUR,IncDecSel_POST_INC,SH2CPU : in AB,to register array,X,Read,Word,Sign,,Yes
MOV.L,"@Rm+, Rn","Read long-word from @(Rm) and move into Rn. Then, increment Rm.","(Rm) -> Rn, Rm+4 -> Rm",nm,0110 nnnn mmmm 0110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Post-increment indirect register addressing (Long-word),Rm (from register array),X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_FOUR,IncDecSel_POST_INC,SH2CPU : in AB,to register array,X,Read,Long-word,None,,Yes
MOV.B,"RO, @(disp,Rn)",Move byte from R0 into @(Rn + disp),R0 -> (disp + Rn),nd4,1000 0000 nnnn dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Byte),Rn (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Byte,None,,Yes
MOV.W,"RO, @(disp,Rn)",Move word from R0 into @(Rn + disp*2),R0 -> (disp*2 + Rn),nd4,1000 000l nnnn dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Word),Rn (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_TWO,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Word,None,,Yes
MOV.L,"RO, @(disp,Rn)",Move long-word from R0 into @(Rn + disp*4),Rm -> (disp*4 + Rn),nmd,0001 nnnn mmmm dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Long-word),Rn (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Long-word,None,,Yes
MOV.B,"@(disp, Rm), R0",,(disp + Rm) -> Sign extension -> R0,md,1000 0100 mmmm dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Byte),Rm (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Byte,Sign,,Yes
MOV.W,"@(disp, Rm), R0",,(disp*2 + Rm) -> Sign extension -> R0,md,1000 0101 mmmm dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Word),Rm (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_TWO,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Word,Sign,,Yes
MOV.L,"@(disp, Rm), Rn",,(disp*4 + Rm) -> Rn,nmd,0101 nnnn mmmm dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect register addressing with displacement (Long-word),Rm (from register array),X,X,X,0,dddd,X,BaseSel_REG,IndexSel_OFF4,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOV.B,"Rm, @(R0, Rn)",,Rm -> (R0 + Rn),nm,0000 nnnn mmmm 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rn (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Byte,None,,Yes
MOV.W,"Rm, @(R0, Rn)",,Rm -> (R0 + Rn),nm,0000 nnnn mmmm 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rn (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Word,None,,Yes
MOV.L,"Rm, @(R0, Rn)",,Rm -> (R0 + Rn),nm,0000 nnnn mmmm 0110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rn (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Long-word,None,,Yes
MOV.B,"@(R0, Rm), Rn",,(R0 + Rm) -> Sign extension -> Rn,nm,0000 nnnn mmmm 1100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rm (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Byte,Sign,,Yes
MOV.W,"@(R0, Rm), Rn",,(R0 + Rm) -> Sign extension -> Rn,nm,0000 nnnn mmmm 1101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rm (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Word,Sign,,Yes
MOV.L,"@(R0, Rm), Rn",,(R0 + Rm) -> Rn,nm,0000 nnnn mmmm 1110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect indexed register addressing,Rm (from register array),R0 (from register array),X,X,0,X,X,BaseSel_REG,IndexSel_R0,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOV.B,"R0, @(disp, GBR)",,R0 -> (disp + GBR),d,1100 0000 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Byte),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Byte,None,,Yes
MOV.W,"R0, @(disp, GBR)",,R0 -> (disp*2 + GBR),d,1100 0001 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Word),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_TWO,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Word,None,,Yes
MOV.L,"R0, @(disp, GBR)",,R0 -> (disp*4 + GBR),d,1100 0010 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Long-word),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Write,Long-word,None,,Yes
MOV.B,"@(disp, GBR), R0",,(disp + GBR) -> Sign extension -> R0,d,1100 0100 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Byte),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Byte,Sign,,Yes
MOV.W,"@(disp, GBR), R0",,(disp*2 + GBR) -> Sign extension -> R0,d,1100 0101 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Word),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_TWO,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Word,Sign,,Yes
MOV.L,"@(disp, GBR), R0",,(disp*4 + GBR) -> R0,d,1100 0110 dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Long-word),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOVA,"@(disp, PC), R0",,disp*4 + PC -> R0,d,1100 0lll dddd dddd,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,PC relative addressing with displacement (Long-word),X,X,SH2PMAU : out PCOut,X,0,X,dddd dddd,BaseSel_PC,IndexSel_OFF8,OffScalarSel_FOUR,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,Yes
MOVT,Rn,,T -> Rn,n,0000 nnnn 0010 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SWAP.B,"Rm, Rn",,Rm -> Swap upper and lower 2 bytes -> Rn,nm,0110 nnnn mmmm 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SWAP.W,"Rm, Rn",,Rm -> Swap upper and lower word -> Rn,nm,0110 nnnn mmmm 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
XTRCT,"Rm, Rn",,Center 32 bits of Rm and Rn -> Rn,nm,0010 nnnn mmmm 1101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ADD,"Rm, Rn",,Rn + Rm -> Rn,nm,0011 nnnn mmmm 1100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ADD,"#imm, Rn",,Rn + imm -> Rn,nm,0111 nnnn iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ADDC,"Rm, Rn",,"Rn + Rm + T -> Rn, Carry -> T",nm,0011 nnnn mmmm 1110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ADDV,"Rm, Rn",,"Rn + Rm -> Rn, Overflow -> T",nm,0011 nnnn mmmm 1111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/EQ,"#imm,RO",,"If R0 = imm, 1 -> T",i,1000 1000 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/EQ,"Rm, Rn",,"If Rn = Rm, 1 -> T",nm,0011 nnnn mmmm 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/HS,"Rm, Rn",,"If Rn >= Rm with unsigned data, 1 -> T",nm,0011 nnnn mmmm 0010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/GE,"Rm, Rn",,"If Rn >= Rm with signed data, 1 -> T",nm,0011 nnnn mmmm 0011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/HI,"Rm, Rn",,"If Rn > Rm with unsigned data, 1 -> T",nm,0011 nnnn mmmm 0110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/GT,"Rm, Rn",,"If Rn > Rm with signed data, 1 -> T",nm,0011 nnnn mmmm 0111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/PL,Rn,,"If Rn > 0, 1 -> T",n,0100 nnnn 0001 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/PZ,Rn,,"If Rn >= 0, 1 -> T",n,0100 nnnn 0001 0001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
CMP/STR,"Rm, Rn",,"If Rn and Rm have and equivalent byte, 1 -> T",nm,0010 nnnn mmmm 1100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
DIV1,"Rm, Rn",,Single-step division (Rn/Rm),nm,0011 nnnn mmmm 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
DIV0S,"Rm, Rn",,"MSB of Rn -> Q, MSB of Rm -> M,  M ^ Q -> T",nm,0010 nnnn mmmm 0111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
DIV0U,,,0 -> M/Q/T,0,0000 0000 0001 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
DMULS.L,"Rm, Rn",,"Signed operation of Rn * Rm -> MACH, MACL 32 x 32 -> 64 bits",nm,0011 nnnn mmmm 1101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
DMULS.L,"Rm, Rn",,"Unsigned operation of Rn * Rm -> MACH, MACL 32 x 32 -> 64 bits",nm,0011 nnnn mmmm 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
DT,Rn,,"Rn - 1 -> Rn, when Rn is 0,  1 -> T. When Rn is nonzero, 0 -> T",n,0100 nnnn 0001 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
EXTS.B,"Rm, Rn",,A byte in Rm is sign-extended -> Rn,nm,0110 nnnn mmmm 1110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
EXTS.W,"Rm, Rn",,A word in Rm is sign-extended -> Rn,nm,0110 nnnn mmmm 1111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
EXTU.B,"Rm, Rn",,A byte in Rm is zero-extended -> Rn,nm,0110 nnnn mmmm 1100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
EXTU.W,"Rm, Rn",,A word in Rm is zero-extended -> Rn,nm,0110 nnnn mmmm 1101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
MAC.L,"@Rm+, @Rn+",,Signed operation of (Rn) * (Rn) + MAC ->  MAC 32 x 32 bits -> 64 bits,nm,0000 nnnn mmmm 1111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing (twice),"Rn, Rm",X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,No
MAC .W,"@Rm+, @Rn+",,Signed operation of (Rn) * (Rn) + MAC ->  MAC (SH-2 CPU) 16 x 16 + 64 -> 64 bits (SH-1 CPU) 16 x 16 + 42 -> 42 bits,nm,0100 nnnn mmmm 1111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing (twice),"Rn, Rm",X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read,Long-word,None,,No
MUL.L,"Rm, Rn",,"Rn * Rm -> MACL, 32 x 32 -> 32 bits",nm,0000 nnnn mmmm 0111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
MULS.W,"Rm, Rn",,"Signed operation of Rn * Rm -> MAC, 16 x 16 bits -> 32 bits",nm,0010 nnnn mmmm 1111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
MULU.W,"Rm, Rn",,"Unsigned operation of Rn * Rm -> MAC, 16 x 16 -> 32 bits",nm,0010 nnnn mmmn 1110,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
NEG,"Rm, Rn",,0 - Rm  -> Rn,nm,0110 nnnn mmmm 1011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
NEGC,"Rm, Rn",,0 - Rm - T -> Rn,nm,0110 nnnn mmmm 1010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SUB,"Rm, Rn",,Rn - Rm -> Rn,nm,0011 nnnn mmmm 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SUBC,"Rm, Rn",,"Rn - Rm - T -> Rn, Borrow -> T",nm,0011 nnnn mmmm 1010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SUBV,"Rm, Rn",,"Rn - Rm -> Rn, Underflow -> T",nm,0011 nnnn mmmm 1011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,
AND,"Rm, Rn",,Rn & Rm -> Rn,nm,0010 nnnn mmmm 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
AND,"#imm, R0",,R0 & imm -> R0,i,1100 1001 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
AND.B,"#imm, @(R0, GBR)",,(R0 + GBR) & imm -> (R0 + GBR),i,1100 1101 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,,,,,,,,,,,,,,,,,,,,
NOT,"Rm, Rn",,~Rm -> Rn,nm,0110 nnnn mmmm 0111,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
OR,"Rm, Rn",,Rn | Rm -> Rn,nm,0010 nnnn mmmm 1011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
OR,"#imm, R0",,R0 | imm -> R0,i,1100 1011 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
OR.B,"#imm, @(R0, GBR)",,(R0 + GBR) | imm -> (R0 + GBR),i,1100 1111 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Byte),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read and Write,Byte,None,,No
TAS.B,@Rn,,"If (Rn) is 0, 1 -> T; 1 -> MSB of (Rn)",n,0100 nnnn 0001 1011,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect Register Addressing,Rn,X,X,X,0,X,X,BaseSel_REG,IndexSel_NONE,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,"Read, conditional Write",Byte,None,,No
TST,"Rm, Rn",,"Rn & Rm;  if the result is 0, 1 -> T",nm,0010 nnnn mmmm 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
TST,"#imm, R0",,"R0 & imm;  if the result is 0, 1 -> T",i,1100 1000 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
TST.B,"#imm, @(R0, GBR)",,"(R0 + GBR) & imm;  if the result is 0, 1 -> T",i,1100 1100 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,,,,,,,,,,,,,,,,,,,,Yes
XOR,"Rm, Rn",,Rn ^ Rm -> Rn,nm,0010 nnnn mmmm 1010,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
XOR,"#imm, R0",,R0 ^ imm -> R0,i,1100 1010 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
XOR.B,"#imm. @(R0, GBR)",,(R0 + GBR) ^ imm -> (R0 + GBR),i,1100 1110 iiii iiii,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,Indirect GBR addressing with displacement (Byte),X,X,X,X,0,X,dddd dddd,BaseSel_GBR,IndexSel_OFF8,OffScalarSel_ONE,IncDecSel_NONE,SH2CPU : in AB,X,X,Read and Write,Byte,None,,Yes
,,,,,,,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,,,,,,,,,,,,,,,,,,,,
ROTL,Rn,,T <- Rn <- MSB,n,0100 nnnn 0000 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ROTR,Rn,,LSB -> Rn -> T,n,0100 nnnn 0000 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ROTCL,Rn,,T <- Rn <- T,n,0100 nnnn 0010 0100,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
ROTCR,Rn,,T -> Rn -> T,n,0100 nnnn 0010 0101,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SHAL,Rn,,T <- Rn <- 0,n,0100 nnnn 0010 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SHAR,Rn,,MSB -> Rn -> T,n,0100 nnnn 0010 0001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SHLL,Rn,,T <- Rn <- 0,n,0100 nnnn 0000 0000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SHLR,Rn,,0 -> Rn -> T,n,0100 nnnn 0000 0001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
SHLL2,Rn,,Rn << 2 -> Rn,n,0100 nnnn 0000 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
SHLR2,Rn,,Rn >> 2 -> Rn,n,0100 nnnn 0000 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
SHLL8,Rn,,Rn << 8 -> Rn,n,0100 nnnn 0001 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
SHLR8,Rn,,Rn >> 8 -> Rn,n,0100 nnnn 0001 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
SHLL16,Rn,,Rn << 16 -> Rn,n,0100 nnnn 0010 1000,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
SHLR16,Rn,,Rn >> 16 -> Rn,n,0100 nnnn 0010 1001,Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIn,X,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,No
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BF,label,,"If T=0, disp*2 + PC -> PC; if T=1, nop (where label is disp*2 + PC)",d,1000 1011 dddd dddd,If T=0 : Relative 8,X,X,0,dddd dddd,X,PCAddrMode_RELATIVE_8,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,If T=1 : Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,
BF/S,label,,"Delayed branch, if T=0, disp*2 + PC -> PC; if T=1, nop",d,1000 1111 dddd dddd,If T=0 Relative 8,X,X,0,dddd dddd,X,PCAddrMode_RELATIVE_8,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,If T=1 : Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,
BT,label,,"If T=1, disp*2 + PC -> PC; if T=0, nop (where label is disp*2 + PC)",d,1000 1001 dddd dddd,If T=1 : Relative 8,X,X,0,dddd dddd,X,PCAddrMode_RELATIVE_8,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,If T=0 : Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,
BT/S,label,,"Delayed branch, if T=1, disp*2 + PC -> PC, if T=0, nop",d,1000 1101 dddd dddd,If T=1 : Relative 8,X,X,0,dddd dddd,X,PCAddrMode_RELATIVE_8,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,If T=0 : Increment,X,X,0,X,X,PCAddrMode_INC,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,
BRA,label,,"Delayed branch, disp*2 + PC -> PC",d12,1010 dddd dddd dddd,Relative 12,X,X,0,X,dddd dddd dddd,PCAddrMode_RELATIVE_12,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
BRAF,Rm,,"Delayed branch, Rm + PC -> PC",m,0000 mmmm 0010 0011,Register Relative,mmmm,X,0,X,X,PCAddrMode_REG_DIRECT_RELATIVE,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
BSR,label,,"Delayed branch, PC -> PR, disp*2 + PC -> PC",d12,1011 dddd dddd dddd,Relative 8 and Load PR from PC,X,SH2PMAU : out PCOut,1,X,dddd dddd dddd,PCAddrMode_RELATIVE_12,"SH2PMAU : in PRIn, SH2CPU : in PCIN",,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
BSRF,Rm,,"Delayed branch, PC -> PR, Rm + PC -> PC",m,0000 mmmm 0000 0011,Register Relative and Load PR from PC,mmmm,SH2PPMAU : out PCOut,1,X,X,PCAddrMode_REG_DIRECT_RELATIVE,"SH2PMAU : in PRIn, SH2CPU : in PCIN",,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
JMP,@Rm,,"Delayed branch, Rm -> PC",m,0100 mmmm 0010 1011,Register Direct,mmmm,X,0,X,X,PCAddrMode_REG_DIRECT,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
JSR,@Rm,,"Delayed branch, PC -> PR, Rm -> PC",m,0100 mmmm 0000 1011,Register Direct and Load PR from PC,mmmm,X,1,X,X,PCAddrMode_REG_DIRECT,"SH2PMAU : in PRIn, SH2CPU : in PCIN",,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
RTS,,,"Delayed branch, PR -> PC",0,0000 0000 0000 1011,PR Direct,X,X,0,X,X,PCAddrMode_PR_DIRECT,SH2CPU : in PCIN,,None,X,X,X,X,0,X,X,X,X,X,X,X,X,X,X,X,X,,Yes
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLRT,,,0 -> T,0,0000 0000 0000 1000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
CLRMAC,,,"0 -> MACH, MACL",0,0000 0000 0010 1000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
LDC,"Rm, SR",,Rm -> SR,m,0100 mmnm 0000 1110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDC,"Rm, GBR",,Rm -> GBR,m,0100 mmmm 0001 1110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDC,"Rm, VBR",,Rm -> VBR,m,0100 mmmm 0010 1110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDC.L,"@Rm+, SR",,"(Rm) -> SR, Rm + 4 -> Rm",m,0100 mmmm 0000 0111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDC.L,"@Rm+, GBR",,"(Rm) -> GBR, Rm + 4 -> Rm",m,0100 mmmm 0001 0111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDC.L,"@Rm+, GBR",,"(Rm) -> GBR, Rm + 4 -> Rm",m,0100 mmmm 0010 0111,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDS,"Rm, MACH",,Rm -> MACH,m,0100 mmmm 0000 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
LDS,"Rm, MACL",,Rm -> MACL,m,0100 mmnm 0001 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
LDS,"Rm, PR",,Rm -> PR,m,0100 mmmm 0010 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
LDS.L,"@Rm+, MACH",,"(Rm) -> MACH, Rm + 4 -> Rm",m,0100 mmmm 0000 0110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
LDS.L,"@Rm+, MACL",,"(Rm) -> MACL, Rm + 4 -> Rm",m,0100 mmmm 0001 0110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
LDS.L,"@Rm+, PR",,"(Rm) -> PR, Rm + 4 -> Rm",m,0100 mmmm 0010 0110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
NOP,,,No operation.,0,0000 0000 0000 1001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
RTE,,,"Delayed branch, stack area -> PC/SR",0,0000 0000 0010 1011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
SETT,,,1 -> T,0,0000 0000 0001 1000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
SLEEP,,,Sleep,0,0000 0000 0001 1011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
STC,"SR, Rn",,SR -> Rn,n,0000 nnnn 0000 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STC,"GBR, Rn",,GBR -> Rn,n,0000 nnnn 0001 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STC,"VBR, Rn",,VBR -> Rn,n,0000 nnnn 0010 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STC.L,"SR, @-Rn",,"Rn - 4 -> Rn, SR -> (Rn)",n,0100 nnnn 0000 0011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STC.L,"GBR, @-Rn",,"Rn - 4 -> Rn, GBR -> (Rn)",n,0100 nnnn 0001 0011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STC.L,"VBR, @-Rn",,"Rn - 4 -> Rn, VBR -> (Rn)",n,0100 nnnn 0010 0011,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STS,"MACH, Rn",,MACH -> Rn,n,0000 nnnn 0000 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
STS,"MACL, Rn",,MACL -> Rn,n,0000 nnnn 0001 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
STS,"PR, Rn",,PR -> Rn,n,0000 nnnn 0010 1010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
STS.L,"MACH, @-Rn",,"Rn - 4 -> Rn, MACH -> (Rn)",n,0100 nnnn 0000 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
STS.L,"MACL, @-Rn",,"Rn - 4 -> Rn, MACHL -> (Rn)",n,0100 nnnn 0001 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No
STS.L,"PR, @-Rn",,"Rn - 4 -> Rn, PR -> (Rn)",n,0100 nnnn 0010 0010,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes
TRAPA,#imm,,"PC/SR -> stack area, (imm*4 + VBR)",i,1100 0011 iiii iiii,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Yes